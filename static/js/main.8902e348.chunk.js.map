{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","fetchImagesApi","searchQuery","imagesPage","pageSize","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","evt","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","onClick","src","img","alt","ImageGalleryItem","largeImageURL","images","map","id","webformatURL","tags","onOpenImages","Button","scrollTo","top","documentElement","scrollHeight","behavior","onOpenCloseButton","Loader","ImageGallery","isLoading","showModal","error","bigImg","onChangeQuery","fetchImages","options","prevState","catch","finally","onOpenBigImages","toggleModal","prevProps","loadingButtonAndPreloader","length","App","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8902e348.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com\";\r\nconst API_KIY = \"21253837-b1ce1cf3df57506fc2e4b8a71\";\r\n\r\nconst fetchImagesApi = ({\r\n  searchQuery = \"\",\r\n  imagesPage = 1,\r\n  pageSize = 12,\r\n}) => {\r\n  return axios\r\n    .get(\r\n      `/api/?q=${searchQuery}&page=${imagesPage}&key=${API_KIY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default fetchImagesApi;\r\n","import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='Searchbar'>\r\n        <form className='SearchForm' onSubmit={this.handleSubmit}>\r\n          <button type='submit' className='SearchForm-button'>\r\n            <span className='SearchForm-button-label'>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className='SearchForm-input'\r\n            type='text'\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete='off'\r\n            autoFocus\r\n            placeholder='Search images and photos'\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (evt) => {\r\n    if (evt.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className='Overlay' onClick={this.handleBackdropClick}>\r\n        <div className='Modal'>\r\n          <img src={this.props.img} alt='rfh' />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  onOpenImages(largeImageURL) {\r\n    this.props.onClick(largeImageURL);\r\n  }\r\n\r\n  render() {\r\n    return this.props.images.map(\r\n      ({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li key={id} className='ImageGalleryItem'>\r\n          <img\r\n            className='ImageGalleryItem-image'\r\n            src={webformatURL}\r\n            alt={tags}\r\n            onClick={() => this.onOpenImages(largeImageURL)}\r\n          />\r\n        </li>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class Button extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          className='Button'\r\n          type='button'\r\n          onClick={this.props.onOpenCloseButton}\r\n        >\r\n          Load more\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className='preloader'>\r\n        <div className='preloader__row'>\r\n          <div className='preloader__item'></div>\r\n          <div className='preloader__item'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport fetchImagesApi from \"../../services/images-api\";\r\nimport axios from \"axios\";\r\nimport Searchbar from \"../Searchbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"../Loader\";\r\n\r\nimport \"../styles.css\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com\";\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    imagesPage: 1,\r\n    searchQuery: \"\",\r\n    isLoading: false,\r\n    showModal: false,\r\n    error: null,\r\n    bigImg: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      imagesPage: 1,\r\n      images: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { imagesPage, searchQuery } = this.state;\r\n\r\n    const options = {\r\n      searchQuery,\r\n      imagesPage,\r\n    };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImagesApi(options)\r\n      .then((images) => {\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images],\r\n          imagesPage: prevState.imagesPage + 1,\r\n        }));\r\n      })\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  onOpenBigImages = (largeImageURL) => {\r\n    this.setState({\r\n      bigImg: largeImageURL,\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n    this.setState({ bigImg: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, error, showModal } = this.state;\r\n    const loadingButtonAndPreloader = images.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {error && <h2>Sorry, error</h2>}\r\n\r\n          <Searchbar onSubmit={this.onChangeQuery} />\r\n\r\n          {showModal && (\r\n            <Modal onClose={this.toggleModal} img={this.state.bigImg} />\r\n          )}\r\n          <ul className='ImageGallery'>\r\n            {!images.length ? (\r\n              <h2>Please, enter a valid image title</h2>\r\n            ) : (\r\n              <ImageGalleryItem\r\n                images={this.state.images}\r\n                onClick={this.onOpenBigImages}\r\n              />\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <div className='ButtonBlock'>\r\n          {isLoading && <Loader />}\r\n\r\n          {loadingButtonAndPreloader && (\r\n            <Button onOpenCloseButton={this.fetchImages} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\n\nimport ImagesGalery from \"./components/ImageGallery/ImageGallery\";\nclass App extends Component {\n  state = {\n    images: [],\n    filter: \"\",\n    showModal: false,\n    query: \"\",\n    bigImg: \"\",\n  };\n\n  render() {\n    return (\n      <>\n        <ImagesGalery />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}